# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
config.load_autoconfig()

# User agent to send. Unset to send the default. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/{webkit_version} (KHTML, like Gecko) {upstream_browser_key}/{upstream_browser_version} Safari/{webkit_version}', 'https://web.whatsapp.com/')

# User agent to send. Unset to send the default. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:71.0) Gecko/20100101 Firefox/71.0', 'https://accounts.google.com/*')

# User agent to send. Unset to send the default. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/99 Safari/537.36', 'https://*.slack.com/*')

# User agent to send. Unset to send the default. Note that the value
# read from JavaScript is always the global value.
# Type: String
config.set('content.headers.user_agent', 'Mozilla/5.0 ({os_info}; rv:71.0) Gecko/20100101 Firefox/71.0', 'https://docs.google.com/*')

# User agent to send. Unset to send the default. Note that the value
# read from JavaScript is always the global value.
# Type: String
c.content.headers.user_agent = 'Mozilla/5.0 (Windows NT 10.0; rv:68.0) Gecko/20100101 Firefox/68.0'

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'chrome-devtools://*')

# Load images automatically in web pages.
# Type: Bool
config.set('content.images', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
c.content.javascript.enabled = True

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome-devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'devtools://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allow websites to show notifications.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
config.set('content.notifications', False, 'https://g9073.mudperipherd.club')

# Allow websites to show notifications.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
config.set('content.notifications', False, 'https://www.1337x.to')

# Allow websites to show notifications.
# Type: BoolAsk
# Valid values:
#   - true
#   - false
#   - ask
config.set('content.notifications', False, 'https://xwubw.mudperipherd.club')

# Which categories to show (in which order) in the :open completion.
# Type: FlagList
# Valid values:
#   - searchengines
#   - quickmarks
#   - bookmarks
#   - history
c.completion.open_categories = ['searchengines', 'history', 'quickmarks',]

# Open new tabs (middleclick/ctrl+click) in the background.
# Type: Bool
c.tabs.background = True

# When to show favicons in the tab bar.
# Type: String
# Valid values:
#   - always: Always show favicons.
#   - never: Always hide favicons.
#   - pinned: Show favicons only on pinned tabs.
c.tabs.favicons.show = 'never'

# Position of the tab bar.
# Type: Position
# Valid values:
#   - top
#   - bottom
#   - left
#   - right
c.tabs.position = 'right'

# Format to use for the tab title. The following placeholders are
# defined:  * `{perc}`: Percentage as a string like `[10%]`. *
# `{collapsed}`: If children tabs are hidden, the string `[...]`, empty
# otherwise * `{tree}`: The ASCII tree prefix of current tab. *
# `{perc_raw}`: Raw percentage, e.g. `10`. * `{current_title}`: Title of
# the current web page. * `{title_sep}`: The string ` - ` if a title is
# set, empty otherwise. * `{index}`: Index of this tab. * `{id}`:
# Internal tab ID of this tab. * `{scroll_pos}`: Page scroll position. *
# `{host}`: Host of the current web page. * `{backend}`: Either
# ''webkit'' or ''webengine'' * `{private}`: Indicates when private mode
# is enabled. * `{current_url}`: URL of the current web page. *
# `{protocol}`: Protocol (http/https/...) of the current web page. *
# `{audio}`: Indicator for audio/mute status.
# Type: FormatString
c.tabs.title.format = '{tree}{collapsed}{audio}{index}: {current_title}'

# Width (in pixels or as percentage of the window) of the tab bar if
# it's vertical.
# Type: PercOrInt
c.tabs.width = '12%'

# Enable tree-tabs mode.
# Type: Bool
c.tabs.tree_tabs = True

# Search engines which can be used via the address bar. Maps a search
# engine name (such as `DEFAULT`, or `ddg`) to a URL with a `{}`
# placeholder. The placeholder will be replaced by the search term, use
# `{{` and `}}` for literal `{`/`}` signs. The search engine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://searx.lukesmith.xyz?preferences=eJx1VMFu2zAM_Zr5YmRA18NOPgwbhhUY0GJJdxVombY5S6JHyUm9rx-VxondYRfDpMTHx0eKFhJ2LISx6jCggCschG6CDisMu-d94diCy0YBU2LLfnSYsCrI6x0zCr_M1VdwEQuPqeemenrcH4oILUYEsX31oUg9eqw4WpBCME4uRcPBBDyZBPUlumEyesjuiFIxqPmepSvOUbuYZuXguCPLDR53DchQNBShdtgYDB0FrWCGntmYSyHvPnxuBTw4qgWNoaQOz78Qh_UVTMwurj2ZNB2xpI33tZicvcyfC17H3DksRwdz6fmoMhpzpAY5ZiDbRZ6M8VMkm1MJn6hZg_KIQXBkjWrJYQ6qKdWTHTBdMvRQC-TPxW6FwkBg1cwNyCGJh5kTx54HCLd0YQa4WYJNQ2mdfPFccdpGOPNbqCwXIlsCV3psCNR9ooF-T5xwDeZnj55lLpNAiE6nalNop6on8lmecxWLNNfcFGCl3Cv1q5kz6lRESvMaVN2JOIBsvNbaXTquoqcQtT-xX2VrpgbDtrt_AviNOlM9d-gXwpmCMha7qXrT_iz0Te-7l1W-u_v7jy8rSh11OrkQ03YSZ8_B6SSvvQG08o3jrM3SozD6C8OlW_qqFs3y79XxGneltHRgAXozRFeqrSCWkdt0AsGyIUGbOCu-6eOmVTXzEP8nE4zjatphHEpPIiwrnY8859XyD8Da84buGa_AsN0Htw0xukldsXoILQXS0Y1W2GWgR32C5pO1GKP58vigK-gkekFPfpLfORrQ9JwGnG_wC9hBQB-qmOcf3zVMnz-Khu3PiyLvN_u6W2cT0alqevbtcHjar1Ls0bVGObF4yKMcC60LFfov3WkbMA==&q={}', 'wa': 'https://wiki.archlinux.org/?search={}', 'aur': 'https://aur.archlinux.org/packages/?O=0&SeB=nd&K={}', 'arg': 'https://aaaaarg.fail/search?query={}', 'abe': 'https://www.abebooks.co.uk/servlet/SearchResults?cm_sp=SearchF-_-TopNavISS-_-Results&ds=20&kn={}', 'sep': 'https://leibniz.stanford.edu/friends/search_title/?query={}', 'ryma': 'https://rateyourmusic.com/search?bx=a954a0eb5e51273366acccb9f59797d7&searchtype=a&searchterm={}'}

# Text color of the completion widget. May be a single color to use for
# all columns or a list of three colors, one for each column.
# Type: List of QtColor, or QtColor
c.colors.completion.fg = '#dddedb'

# Background color of the completion widget for odd rows.
# Type: QssColor
c.colors.completion.odd.bg = '#010101'

# Background color of the completion widget for even rows.
# Type: QssColor
c.colors.completion.even.bg = '#010101'

# Foreground color of completion widget category headers.
# Type: QtColor
c.colors.completion.category.fg = '#dddedb'

# Background color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.bg = '#010101'

# Top border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.top = '#010101'

# Bottom border color of the completion widget category headers.
# Type: QssColor
c.colors.completion.category.border.bottom = '#010101'

# Foreground color of the selected completion item.
# Type: QtColor
c.colors.completion.item.selected.fg = '#dddedb'

# Background color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.bg = '#9a9b99'

# Top border color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.border.top = '#010101'

# Bottom border color of the selected completion item.
# Type: QssColor
c.colors.completion.item.selected.border.bottom = '#010101'

# Foreground color of the matched text in the completion.
# Type: QtColor
c.colors.completion.match.fg = '#AB57AE'

# Color of the scrollbar handle in the completion view.
# Type: QssColor
c.colors.completion.scrollbar.fg = '#9a9b99'

# Color of the scrollbar in the completion view.
# Type: QssColor
c.colors.completion.scrollbar.bg = '#010101'

# Background color for the download bar.
# Type: QssColor
c.colors.downloads.bar.bg = '#010101'

# Color gradient stop for download backgrounds.
# Type: QtColor
c.colors.downloads.stop.bg = '#9CDF9C'

# Color gradient interpolation system for download backgrounds.
# Type: ColorSystem
# Valid values:
#   - rgb: Interpolate in the RGB color system.
#   - hsv: Interpolate in the HSV color system.
#   - hsl: Interpolate in the HSL color system.
#   - none: Don't show a gradient.
c.colors.downloads.system.bg = 'none'

# Foreground color for downloads with errors.
# Type: QtColor
c.colors.downloads.error.fg = '#dddedb'

# Background color for downloads with errors.
# Type: QtColor
c.colors.downloads.error.bg = '#C8BB46'

# Font color for hints.
# Type: QssColor
c.colors.hints.fg = '#010101'

# Background color for hints. Note that you can use a `rgba(...)` value
# for transparency.
# Type: QssColor
c.colors.hints.bg = '#AB57AE'

# Font color for the matched part of hints.
# Type: QtColor
c.colors.hints.match.fg = '#54C0A8'

# Text color for the keyhint widget.
# Type: QssColor
c.colors.keyhint.fg = '#dddedb'

# Highlight color for keys to complete the current keychain.
# Type: QssColor
c.colors.keyhint.suffix.fg = '#AB57AE'

# Background color of the keyhint widget.
# Type: QssColor
c.colors.keyhint.bg = '#010101'

# Foreground color of an error message.
# Type: QssColor
c.colors.messages.error.fg = '#dddedb'

# Background color of an error message.
# Type: QssColor
c.colors.messages.error.bg = '#C8BB46'

# Border color of an error message.
# Type: QssColor
c.colors.messages.error.border = '#C8BB46'

# Foreground color of a warning message.
# Type: QssColor
c.colors.messages.warning.fg = '#dddedb'

# Background color of a warning message.
# Type: QssColor
c.colors.messages.warning.bg = '#C8BB46'

# Border color of a warning message.
# Type: QssColor
c.colors.messages.warning.border = '#C8BB46'

# Foreground color of an info message.
# Type: QssColor
c.colors.messages.info.fg = '#dddedb'

# Background color of an info message.
# Type: QssColor
c.colors.messages.info.bg = '#54C0A8'

# Border color of an info message.
# Type: QssColor
c.colors.messages.info.border = '#54C0A8'

# Foreground color for prompts.
# Type: QssColor
c.colors.prompts.fg = '#dddedb'

# Border used around UI elements in prompts.
# Type: String
c.colors.prompts.border = '1px solid #010101'

# Background color for prompts.
# Type: QssColor
c.colors.prompts.bg = '#010101'

# Background color for the selected item in filename prompts.
# Type: QssColor
c.colors.prompts.selected.bg = '#ABB2A6'

# Foreground color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.fg = '#dddedb'

# Background color of the statusbar.
# Type: QssColor
c.colors.statusbar.normal.bg = '#010101'

# Foreground color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.fg = '#010101'

# Background color of the statusbar in insert mode.
# Type: QssColor
c.colors.statusbar.insert.bg = '#5F4FAA'

# Foreground color of the statusbar in passthrough mode.
# Type: QssColor
c.colors.statusbar.passthrough.fg = '#dddedb'

# Background color of the statusbar in passthrough mode.
# Type: QssColor
c.colors.statusbar.passthrough.bg = '#54C0A8'

# Foreground color of the statusbar in private browsing mode.
# Type: QssColor
c.colors.statusbar.private.fg = '#dddedb'

# Background color of the statusbar in private browsing mode.
# Type: QssColor
c.colors.statusbar.private.bg = '#010101'

# Foreground color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.fg = '#dddedb'

# Background color of the statusbar in command mode.
# Type: QssColor
c.colors.statusbar.command.bg = '#010101'

# Foreground color of the statusbar in private browsing + command mode.
# Type: QssColor
c.colors.statusbar.command.private.fg = '#dddedb'

# Background color of the statusbar in private browsing + command mode.
# Type: QssColor
c.colors.statusbar.command.private.bg = '#010101'

# Foreground color of the statusbar in caret mode.
# Type: QssColor
c.colors.statusbar.caret.fg = '#dddedb'

# Background color of the statusbar in caret mode.
# Type: QssColor
c.colors.statusbar.caret.bg = '#9CDF9C'

# Foreground color of the statusbar in caret mode with a selection.
# Type: QssColor
c.colors.statusbar.caret.selection.fg = '#dddedb'

# Background color of the statusbar in caret mode with a selection.
# Type: QssColor
c.colors.statusbar.caret.selection.bg = '#9CDF9C'

# Background color of the progress bar.
# Type: QssColor
c.colors.statusbar.progress.bg = '#dddedb'

# Default foreground color of the URL in the statusbar.
# Type: QssColor
c.colors.statusbar.url.fg = '#dddedb'

# Foreground color of the URL in the statusbar on error.
# Type: QssColor
c.colors.statusbar.url.error.fg = '#C8BB46'

# Foreground color of the URL in the statusbar for hovered links.
# Type: QssColor
c.colors.statusbar.url.hover.fg = '#54C0A8'

# Foreground color of the URL in the statusbar on successful load
# (http).
# Type: QssColor
c.colors.statusbar.url.success.http.fg = '#dddedb'

# Foreground color of the URL in the statusbar on successful load
# (https).
# Type: QssColor
c.colors.statusbar.url.success.https.fg = '#9a9b99'

# Foreground color of the URL in the statusbar when there's a warning.
# Type: QssColor
c.colors.statusbar.url.warn.fg = '#C8BB46'

# Background color of the tab bar.
# Type: QssColor
c.colors.tabs.bar.bg = '#010101'

# Color for the tab indicator on errors.
# Type: QtColor
c.colors.tabs.indicator.error = '#C8BB46'

# Color gradient interpolation system for the tab indicator.
# Type: ColorSystem
# Valid values:
#   - rgb: Interpolate in the RGB color system.
#   - hsv: Interpolate in the HSV color system.
#   - hsl: Interpolate in the HSL color system.
#   - none: Don't show a gradient.
c.colors.tabs.indicator.system = 'none'

# Foreground color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.fg = '#dddedb'

# Background color of unselected odd tabs.
# Type: QtColor
c.colors.tabs.odd.bg = '#010101'

# Foreground color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.fg = '#dddedb'

# Background color of unselected even tabs.
# Type: QtColor
c.colors.tabs.even.bg = '#010101'

# Foreground color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.fg = '#dddedb'

# Background color of selected odd tabs.
# Type: QtColor
c.colors.tabs.selected.odd.bg = '#54C0A8'

# Foreground color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.fg = '#dddedb'

# Background color of selected even tabs.
# Type: QtColor
c.colors.tabs.selected.even.bg = '#54C0A8'

# Background color for webpages if unset (or empty to use the theme's
# color).
# Type: QtColor
c.colors.webpage.bg = '#dddedb'
